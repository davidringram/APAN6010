plot(bc.deaths ~ age + period + area, data = bc_period_area)
lines(predLM ~ age, newdat, col = 2)
View(stroke.trim)
library(tidyverse)
p$phat <- predict(m1, type="response")
plot(unlist(poisson.dist[1]), type = "o", xlab="y", ylab = "P(y)",
col = colors[i])
plot(unlist(bc_poisson[1]), type = "o", xlab="y", ylab = "P(y)",
col = colors[i])
plot(unlist(bc_poisson[1]), type = "o", xlab="y", ylab = "P(y)",
col = colors[i])
for (i in 1:6) {
lines(unlist(bc_poisson[i]), type = "o", col = colors[i])
}
plot(unlist(bc_poisson[1]), type = "o", xlab="y", ylab = "P(y)",
col = colors[i])
for (i in 1:6) {
lines(unlist(bc_poisson[i]), type = "o")
}
plot(unlist(bc_period_area[1]), type = "o", xlab="y", ylab = "P(y)",
col = colors[i])
plot(unlist(bc_period_area[1]), type = "o", xlab="y", ylab = "P(y)",
col = colors[i])
for (i in 1:6) {
lines(unlist(bc_period_area[i]), type = "o")
}
plot(unlist(bc_period_area[1]), type = "o", xlab="y", ylab = "P(y)",
col = colors[i])
for (i in 1:6) {
lines(unlist(bc_period_area[i]), type = "o")
}
hist(bc_period_area$bc.deaths)
hist(bc_period_area$bc.deaths)
ggplot(data = bc_period_aream aes(x = bc.deaths, y = c((age + period + area)^2))) +
ggplot(data = bc_period_area, aes(x = bc.deaths, y = c((age + period + area)^2))) +
geom_point
ggplot(data = bc_period_area, aes(x = bc.deaths, y = c((age + period + area)^2))) +
geom_point()
ggplot(data = bc_period_area, aes(x = bc.deaths, y = age) +
ggplot(data = bc_period_area, aes(x = bc.deaths, y = age) +
geom_point()
ggplot(data = bc_period_area, aes(x = bc.deaths, y = age)) +
ggplot(data = bc_period_area, aes(x = bc.deaths, y = age)) +
geom_point()
ggplot(data = bc_period_area, aes(x = bc.deaths, y = age)) +
geom_point() +
geom_jitter(height = 0.05)
ggplot(data = bc_period_area, aes(x = bc.deaths, y = age)) +
geom_point() +
geom_jitter(height = 0.05, width = 0.05)
ggplot(data = bc_period_area, aes(x = bc.deaths, y = age)) +
geom_point() +
geom_jitter(height = 0.05, width = 0.05) +
geom_smooth(method = "glm", method.args = list(family = poisson()))
ggplot(data = bc_period_area, aes(x = bc.deaths, y = age)) +
geom_point() +
geom_jitter(height = 0.05, width = 0.05) +
geom_smooth(method = "glm", method.args = list(family = 'poisson'))
ggplot(data = bc_period_area, aes(x = bc.deaths, y = age)) +
geom_jitter(height = 0.05, width = 0.05) +
geom_smooth(method = "glm", method.args = list(family = 'poisson'))
ggplot(data = bc_period_area, aes(x = bc.deaths, y = age)) +
geom_jitter(height = 0.05, width = 0.05) +
geom_smooth(method = "glm", method.args = list(family = 'poisson'))
ggplot(data = bc_period_area, aes(x = bc.deaths, y = age)) +
geom_smooth(method = "glm", method.args = list(family = 'poisson'))
ggplot(data = bc_period_area, aes(x = bc.deaths, y = period())) +
geom_smooth(method = "glm", method.args = list(family = 'poisson'))
ggplot(data = bc_period_area, aes(x = bc.deaths, y = period())) +
geom_smooth(method = "glm", method.args = list(family = 'poisson')
ggplot(data = bc_period_area, aes(x = bc.deaths, y = period())) +
attach(bcmort)
head(bcmort)
bc_period_area <- within(bcmort,{ period <- area <- cohort
levels(period) <- rep(c("1991-2001", "1981-1991"), each=2)
levels(area) <- rep(c("Cph+Frb", "Nat"), 2)
})
summary(bc_period_area)
hist(bc_period_area$bc.deaths)
bc_poisson <- glm(bc.deaths ~ (age + period + area)^2, family = poisson, offset = log(p.yr), data = bc_period_area)
summary(bc_poisson)
attach(bcmort)
head(bcmort)
bc_period_area <- within(bcmort,{ period <- area <- cohort
levels(period) <- rep(c("1991-2001", "1981-1991"), each=2)
levels(area) <- rep(c("Cph+Frb", "Nat"), 2)
})
summary(bc_period_area)
?within
hist(bc_period_area$bc.deaths)
bc_poisson <- glm(bc.deaths ~ (age + period + area)^2, family = poisson, offset = log(p.yr), data = bc_period_area)
summary(bc_poisson)
bc_poisson <- glm(bc.deaths ~ (age + period + area), family = poisson, offset = log(p.yr), data = bc_period_area)
summary(bc_poisson)
summary(bc_period_area)
str(bc_period_area)
bc_period_area <- within(bcmort,{ period <- area <- cohort
levels(period) <- rep(c("1991-2001", "1981-1991"), 2)
levels(area) <- rep(c("Cph+Frb", "Nat"), 2)
})
str(bc_period_area)
head(bcmort)
bc <- bcmort
View(bc)
bc_period_area <- within(bcmort,{ period <- area <- cohort
levels(period) <- rep(c("1991-2001", "1981-1991"), 2)
levels(area) <- rep(c("Cph+Frb", "Nat"), 2)
})
str(bc_period_area)
View(bc_period_area)
bc_period_area <- within(bcmort,{
levels(period) <- rep(c("1991-2001", "1981-1991"), 2)
levels(area) <- rep(c("Cph+Frb", "Nat"), 2)
})
bc_period_area <- within(bcmort,{ period <- area <- cohort
levels(period) <- rep(c("1991-2001", "1981-1991"), 2)
levels(area) <- rep(c("Cph+Frb", "Nat"), 2)
})
str(bc_period_area)
bc_period_area2 <- levels(period) <- rep(c("1991-2001", "1981-1991"), 2)
hist(bc_period_area$bc.deaths)
bc_poisson <- glm(bc.deaths ~ (age + period + area)^2, family = poisson, offset = log(p.yr), data = bc_period_area)
summary(bc_poisson)
stroke2 <- do.call(rbind, mapply(stroke.trim,
c(0,0.5,2,12), c(0.5,2,12,Inf), simplify=F))
stroke.trim <- function(t1, t2)   subset(transform(stroke, entry=t1, exit=pmin(t2, obsmonths),
dead=dead & obsmonths <= t2), entry < exit)
stroke2 <- do.call(rbind, mapply(stroke.trim,
c(0,0.5,2,12), c(0.5,2,12,Inf), simplify=F))
stroke_poisson <- glm(dead ~ sex + age + factor(entry), family = poisson, offset = log(exit-entry), data = stroke2)
stroke.trim <- function(t1, t2)   subset(transform(stroke, entry=t1, exit=pmin(t2, obsmonths),
dead=dead & obsmonths <= t2), entry < exit)
stroke2 <- do.call(rbind, mapply(stroke.trim,
c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = =F))
bc_period_area <- within(bcmort,{ period <- area <- cohort
levels(period) <- rep(c("91-00", "80-90"), 2)
levels(area) <- rep(c("Cph+Frb", "Nat"), 2)
})
str(bc_period_area)
?rep
bc <- bcmort
head(bcmort)
bc_period_area <- within(bcmort,{ period <- area <- cohort
levels(period) <- rep(c("91-00", "80-90"), 2)
levels(area) <- rep(c("Cph+Frb", "Nat"), 2)
})
str(bc_period_area)
View(bc)
bc <- bcmort
head(bcmort)
bc_period_area <- within(bcmort,{ period <- area <- cohort
levels(period) <- rep(c("91-00", "80-90"), 2)
levels(area) <- rep(c("Copenhagen/Fredriksberg", "National"), 2)
})
str(bc_period_area)
bc <- bcmort
?dim
head(bcmort)
area <- gl(2,6,24,c("Copenhagen/Fredriksberg", "National"))
period <- gl(2,12,24,c("90s", "80s"))
bc_period_area <- data.frame(bcmort, area, period)
View(bc_period_area)
str(bc_period_area)
hist(bc_period_area$bc.deaths)
bc_poisson <- glm(bc.deaths ~ (age + period + area)^2, family = poisson, offset = log(p.yr), data = bc_period_area)
summary(bc_poisson)
bc_poisson <- glm(bc.deaths ~ age + period + area, family = poisson, offset = log(p.yr), data = bc_period_area)
summary(bc_poisson)
plot(glm(bc.deaths ~ (age + period + area)^2, family = poisson, offset = log(p.yr), data = bc_period_area))
summary(bc_poisson)
bc_poisson <- glm(bc.deaths ~ age+period+area+age:period+age:area+period:area+offset(log(p.yr)),
family=poisson,data=bcmort2),test="Chisq",)
bc_poisson <- glm(bc.deaths ~ age+period+area+age:period+age:area+period:area+offset(log(p.yr)),family=poisson,data=bcmort2),test="Chisq",)
bc_poisson <- glm(bc.deaths ~ age+period+area+age:period+age:area+period:area+offset(log(p.yr)),
family=poisson, data=bc_period_area),test="Chisq",)
summary(bc_poisson)
bc_poisson1 <- glm(bc.deaths ~ (age + period + area)^2, family = poisson, offset = log(p.yr), data = bc_period_area)
bc_poisson2 <- glm(bc.deaths ~ age+period+area+age:period+age:area+period:area+offset(log(p.yr)),
family=poisson, data=bc_period_area),test="Chisq",)
bc_poisson2 <- glm(bc.deaths ~ age+period+area+age:period+age:area+period:area+offset(log(p.yr)),
family=poisson, data=bc_period_area),test="Chisq")
bc_poisson2 <- glm(bc.deaths ~ age+period+area+age:period+age:area+period:area+offset(log(p.yr)),
family=poisson, data=bc_period_area),test="Chisq")
summary(glm(bc.deaths ~ age+period+area+age:period+age:area+period:area+offset(log(p.yr)),
family=poisson,data=bcmort2),test="Chisq",)
bc_poisson2 <- glm(bc.deaths ~ age+period+area+age:period+age:area+period:area+offset(log(p.yr)),
family=poisson, data=bc_period_area)
summary(bc_poisson2)
bc_poisson2 <- glm(bc.deaths ~ age+period+area+age:period+age:area+period:area+offset(log(p.yr)),
family=poisson, data=bc_period_area)
summary(bc_poisson2)
stroke
View(bc)
view(stroke)
l <- split(a.long$c, a.long$id)
library(ISwR)
l <- split(a.long$c, a.long$id)
a.long
str(bc_period_area)
a.long
stroke_split <- split(stroke$obsmonths)
?split
str(stroke)
stroke_split <- split(stroke, obsmonths)
stroke_split <- split(stroke, stroke$obsmonths)
View(stroke_split)
View(stroke_split)
str(stroke)
nick <- nickel
View(nick)
entry <- pmax(stroke$obsmonths, 0)
exit <- pmin(stroke$obsmonths, 0.5)
str(stroke)
stroke.trim <- function(t1, t2)
subset(transform(stroke,
entry=t1, exit=pmin(t2, obsmonths),
dead=dead & obsmonths <= t2),
entry < exit)
stroke2 <- do.call(rbind, mapply(stroke.trim,
c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = =F))
stroke.trim <- function(t1, t2) subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2),  entry < exit)
stroke2 <- do.call(rbind, mapply(stroke.trim, c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = =F))
str(stroke)
stroke.trim <- function(t1, t2) subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2),  entry < exit)
stroke2 <- do.call(rbind, mapply(stroke.trim, c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = F))
stroke_poisson <- glm(dead ~ sex + age + factor(entry), family = poisson, offset = log(exit-entry), data = stroke_split)
str(stroke)
stroke_split <- function(1, 2) subset(transform(stroke,entry=1, exit=pmin(2, obsmonths),dead=dead & obsmonths <= 2),  entry < exit)
str(stroke)
stroke_split <- function(t1, t2) subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t 2),  entry < exit)
stroke_appended <- do.call(rbind, mapply(stroke_split, c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = F)
stroke_split <- function(t1, t2) subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2),  entry < exit)
stroke_appended <- do.call(rbind, mapply(stroke_split, c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = F)
stroke_split <- function(t1, t2) subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2),  entry < exit)
stroke.trim <- function(t1, t2)
subset(transform(stroke,
entry=t1, exit=pmin(t2, obsmonths),
dead=dead & obsmonths <= t2),
entry < exit)
stroke2 <- do.call(rbind, mapply(stroke.trim,
c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = =F))
stroke_poisson <- glm(dead ~ sex + age + factor(entry), family = poisson, offset = log(exit-entry), data = stroke_split)
summary(stroke_poisson)
stroke.trim <- function(t1, t2)
subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2), entry < exit)
stroke2 <- do.call(rbind, mapply(stroke.trim,c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = =F))
stroke.trim <- function(t1, t2)
subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2), entry < exit)
stroke2 <- do.call(rbind, mapply(stroke.trim,c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = F))
stroke_poisson <- glm(dead ~ sex + age + factor(entry), family = poisson, offset = log(exit-entry), data = stroke_split)
summary(stroke_poisson)
stroke_split <- function(t1, t2)
stroke_poisson <- glm(dead ~ sex + age + factor(entry), family = poisson, offset = log(exit-entry), data = stroke_split)
summary(stroke_poisson)
stroke_poisson <- glm(dead ~ sex + age + factor(entry), family = poisson, offset = log(exit-entry), data = stroke_split)
stroke_split <- function(t1, t2)
subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2), entry < exit)
stroke_append <- do.call(rbind, mapply(stroke_split,c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = F))
stroke_poisson <- glm(dead ~ sex + age + factor(entry), family = poisson, offset = log(exit-entry), data = stroke_split)
stroke_poisson <- glm(dead ~ sex + age + factor(entry), family = poisson, offset = log(exit-entry), data = stroke_split)
stroke_poisson <- glm(dead ~ sex + age + factor(entry), family = poisson, offset = log(exit-entry), data = stroke_append)
summary(stroke_poisson)
View(stroke_append)
intervals <- c(0, 0.5, 2, 12, Inf)  # Inf for values greater than 12 months
labels <- c("0-0.5", "0.5-2", "2-12", "12+")
# Split data into groups based on obsmonths intervals
groups <- lapply(split(stroke, cut(stroke$obsmonths, breaks = intervals, labels = labels)), function(x) x)
# Print group information (or perform further analysis on each group)
for (i in 1:length(groups)) {
print(paste("Group:", labels[i]))
print(groups[[i]])
print("\n")
}
head(nickel)
trim <- function(start){
end <- start + 5
entry <- pmax(nickel$agein, start)
exit <- pmin(nickel$ageout, end)
valid <- (entry < exit)
cens <- (nickel$ageout[valid] > end)
result <- nickel[valid, ]
result$icd[cens] <- 0
result$agein <- entry[valid]
result$ageout <- exit[valid]
result$agr <- start
resultygr <- with(result, trunc((dob+agein-1)/5)*5+1)
result
}
head(nickel)
head(trim(60))
nickel.expand <-  do.call(rbind, lapply(seq(20, 95, 5), trim))
head(nickel.expand)
stroke_split <- function(t1, t2)
subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2), entry < exit)
View(stroke_split)
stroke_split <- function(t1, t2)
subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2), entry < exit)
stroke_split <- function(t1, t2)
subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2), entry < exit)
stroke_append <- do.call(rbind, mapply(trim,c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = F))
stroke_append <- do.call(rbind, mapply(stroke_split,c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = F))
View(stroke_append)
trim <- function(start){
end <- start + 5
entry <- pmax(stroke$obsmonths, start)
exit <- pmin(stroke$obsmonths, end)
valid <- (entry < exit)
cens <- (stroke$obsmonths[valid] > end)
result <- stroke[valid, ]
result$icd[cens] <- 0
result$entry <- entry[valid]
result$exit <- exit[valid]
result$obsmonths <- start
result$ygr <- with(result, trunc((dob+agein-1)/5)*5+1)
result
}
stroke_append2 <- do.call(rbind, mapply(trim,c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = F))
??survSplit
library(
survSplit )
library(survSplit)
install.packages(survSplit)
install.packages('survSplit')
library(survSplit)
library(survival)
stroke_surv <- survSplit(stroke, cut=c(0,0.5,2,12), end="time", start="start", event="status")
stroke_split <- function(t1, t2)
subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2), entry < exit)
stroke_append2 <- do.call(rbind, mapply(trim,c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = F))
View(stroke_append)
stroke_surv <- survSplit(stroke, cut=c(0,0.5,2,12), end="exit", start="extry", event="")
stroke_surv <- survSplit(stroke, cut=c(0,0.5,2,12), end="exit", start="extry", event="dead")
stroke_surv <- survSplit(stroke, cut=c(0,0.5,2,12), end="obsmonths", start="entry", event="dead")
View(stroke_surv)
stroke_split <- function(t1, t2)subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2), entry < exit)
stroke_append <- do.call(rbind, mapply(trim,c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = F))
stroke_split <- function(t1, t2)subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2), entry < exit)
stroke_append <- do.call(rbind, mapply(trim,c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = F))
stroke_split <- function(t1, t2)subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2), entry < exit)
stroke_append <- do.call(rbind, mapply(stroke_split,c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = F))
View(stroke_append)
?stroke
stroke_surv <- survSplit(stroke, cut=c(0,0.5,2,12), end="obsmonths", start="entry", event="dead")
stroke_surv <- survSplit(stroke, cut=c(0.5,2,12,Inf)), end="obsmonths", start="exit", event="dead")
View(stroke_surv)
stroke_surv <- survSplit(stroke, cut=c(0,0.5,2,12), end="obsmonths", start="entry", event="dead")
stroke_surv <- survSplit(stroke, cut=c(0.5,2,12,Inf)), end="obsmonths", start="exit", event="dead")
stroke_surv1 <- survSplit(stroke, cut=c(0,0.5,2,12), end="obsmonths", start="entry", event="dead")
stroke_surv2 <- survSplit(stroke_surv1, cut=c(0.5,2,12,Inf)), end="obsmonths", start="exit", event="dead")
stroke_surv <- survSplit(stroke, cut=c(0,0.5,2,12), end="obsmonths", start="entry", event="dead")
stroke_surv <- survSplit(stroke, cut=c(0.5,2,12,Inf), end="obsmonths", start="exit", event="dead")
View(stroke_surv1)
str(stroke)
df <- stroke
str(df)
unique(df$dead)
stroke_surv <- survSplit(stroke, cut=c(0,0.5,2,12), end="obsmonths", start="entry", event="dead", episode = "exit")
View(stroke_surv)
stroke_split <- function(t1, t2)subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2), entry < exit)
stroke_append <- do.call(rbind, mapply(stroke_split,c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = F))
View(stroke_append)
stroke_split <- function(t1, t2)subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2), entry < exit)
stroke_append <- do.call(rbind, mapply(stroke_split,c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = F))
View(stroke_append)
stroke_surv <- survSplit(stroke, cut=c(0,0.5,2,12), end="obsmonths", start="entry", event="dead", episode = "exit")
View(stroke_surv)
stroke_surv <- survSplit(stroke, cut=c(0,0.5,2,12), end="obsmonths", start="entry", event="dead", end = "exit")
bc <- bcmort
head(bcmort)
area <- gl(2,6,24,c("Copenhagen/Fredriksberg", "National"))
period <- gl(2,12,24,c("90s", "80s"))
bc_period_area <- data.frame(bcmort, area, period)
str(bc_period_area)
#check dist
hist(bc_period_area$bc.deaths)
#create poisson model
bc_poisson <- glm(bc.deaths ~ age+period+area+age:period+age:area+period:area+offset(log(p.yr)),
family=poisson, data=bc_period_area)
summary(bc_poisson)
str(stroke)
stroke_split <- function(t1, t2)subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2), entry < exit)
str(stroke)
stroke_split <- function(t1, t2)subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2), entry < exit)
stroke_append <- do.call(rbind, mapply(stroke_split,c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = F))
stroke_poisson <- glm(dead ~ sex + age + factor(entry), family = poisson, offset = log(exit-entry), data = stroke_append)
summary(stroke_poisson)
bc <- bcmort
head(bcmort)
area <- gl(2,6,24,c("Copenhagen/Fredriksberg", "National"))
period <- gl(2,12,24,c("90s", "80s"))
bc_period_area <- data.frame(bcmort, area, period)
str(bc_period_area)
#check dist
hist(bc_period_area$bc.deaths)
#create poisson model
bc_poisson <- glm(bc.deaths ~ age+period+area+age:period+age:area+period:area+offset(log(p.yr)),
family=poisson, data=bc_period_area)
summary(bc_poisson)
library(survival)
stroke_surv <- survSplit(stroke, cut = c(0,0.5,2,12), end = "obsmonths", start = "obsmonths", event = "dead", id = "entry")
str(stroke)
library(ISwR)
str(stroke)
stroke_surv <- survSplit(stroke, cut = c(0,0.5,2,12), end = "obsmonths", start = "obsmonths", event = "dead", id = "entry")
View(stroke_surv)
stroke_surv <- survSplit(stroke, cut = c(0,0.5,2,12), end = "obsmonths", start = "", event = "dead", id = "entry")
View(stroke_surv)
str(stroke)
stroke_surv <- survSplit(stroke, cut = c(0,0.5,2,12), end = "obsmonths", start = "", event = "dead", id = "entry")
stroke_split <- function(t1, t2)subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2), entry < exit)
View(stroke_surv)
stroke_split <- function(t1, t2)subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2), entry < exit)
stroke_split <- function(t1, t2)subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2), entry < exit)
stroke_append <- do.call(rbind, mapply(stroke_split,c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = F))
View(stroke_append)
st <- stroke
View(st)
View(stroke_split)
head(nickel)
stroke1 <- stroke[valid, ]
entry <- pmax(stroke$obsmonths, 0)
exit <- pmin(stroke$obsmonths, 0.5)
valid <- (entry < exit)
entry <- entry[valid]
exit <- exit[valid]
cens <- (stroke$obsmonths[valid] > 65)
stroke1 <- stroke[valid, ]
stroke1$dead[cens] <- 0
stroke1$obsmonths <- entry
stroke1$obsmonths <- exit
stroke1$entry <- 0
stroke1$exit <- with(stroke1, )
View(stroke1)
str(stroke)
s
s
stroke_split <- function(t1, t2)subset(transform(stroke,entry=t1, exit=pmin(t2, obsmonths),dead=dead & obsmonths <= t2), entry < exit)
stroke_append <- do.call(rbind, mapply(stroke_split,c(0,0.5,2,12), c(0.5,2,12,Inf), SIMPLIFY = F))
stroke_poisson <- glm(dead ~ sex + age + factor(entry), family = poisson, offset = log(exit-entry), data = stroke_append)
summary(stroke_poisson)
airline.raw <- read.csv("airline.review.cleaned.csv")
head(airline.raw)
contains_any_na = sapply(airline.raw, function(x) any(is.na(x)))
setwd("/Users/davidingram/Desktop/R_Final") # change this to the directory that has the csv file
airline.raw <- read.csv("airline.review.cleaned.csv")
head(airline.raw)
contains_any_na = sapply(airline.raw, function(x) any(is.na(x)))
kmeans.model <- kmeans(kmeans.baked, centers = 3)
head(kmeans.model$cluster)
packages <- c('tidyverse', 'recipes', 'cluster', 'tidyclust')
lapply(packages, library, character.only=TRUE)
setwd("/Users/davidingram/Desktop/R_Final") # change this to the directory that has the csv file
airline.raw <- read.csv("airline.review.cleaned.csv")
head(airline.raw)
contains_any_na = sapply(airline.raw, function(x) any(is.na(x)))
names(airline.raw)[contains_any_na]   # checking which rows have NA values
summary(airline.raw)
to.drop <- c('aircraft_type', 'layover', 'arriving_dest', 'departing_dest', 'country',
'date_flown', 'X', 'wifi_connectivity')
to.drop <- c('aircraft_type', 'layover', 'arriving_dest', 'departing_dest', 'country',
'date_flown', 'X', 'wifi_connectivity')
to.keep <- c('type_of_travellers', 'seat_types','seat_comfort','cabin_staff_service',
'ground_service','food_beverages','inflight_entertainment', 'value_for_money','recommended')
airline.raw.drop <- airline.raw %>% select(-one_of(to.drop))
airline.kmeans <- drop_na(airline.raw.drop)
contains_any_na = sapply(airline.kmeans, function(x) any(is.na(x)))
names(airline.kmeans)[contains_any_na]   # checking if all NAs are gone
str(airline.kmeans)   # check which variables are not numeric
summary(airline.kmeans)
recipe.kmeans <- recipe(~ ., data = airline.kmeans) %>%   # create dummy variables
step_dummy(all_nominal_predictors(), one_hot = TRUE) %>%
step_scale(all_nominal_predictors()) %>%
prep()
kmeans.baked <- bake(recipe.kmeans, new_data = airline.kmeans)
head(kmeans.baked)
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="No. of Clusters",
ylab="WSS")
wss
}
wssplot(kmeans.baked) # doesn't give us a perfect picture, try another
pct_var <- data.frame(pct_var = 0, num_clusters=2:14)
totalss <- kmeans(kmeans.baked, centers = 14, nstart = 50, iter.max = 100)$totss
for(i in 2:14) {
pct_var[i-1, 'pct_var'] <- kmeans(kmeans.baked, centers=i, nstart = 50, iter.max = 100)$betweenss/totalss
}
graph_elbow <- ggplot(pct_var, aes(x=num_clusters, y=pct_var)) +
geom_line() +
geom_point() +
labs(y='% Variance Explained', x='No. of Clusters') +
scale_x_continuous(breaks=seq(2, 14, by=2))   +
theme_bw()
graph_elbow # still no definite cluster size, 6 stands out most
set.seed(43168)
kmeans.model <- kmeans(kmeans.baked, centers = 3)
head(kmeans.model$cluster)
clusplot(kmeans.baked, kmeans.model$cluster, color = TRUE, shade = TRUE, labels = 5, lines = 0, main = "K Means Cluster Plot")
kmeans.model$size  # clusters slightly imbalanced but enough could be explained by segment size
kmeans.model$size  # clusters slightly imbalanced but enough could be explained by segment size
set.seed(43168)
kmeans.model <- kmeans(kmeans.baked, centers = 3)
head(kmeans.model$cluster)
clusplot(kmeans.baked, kmeans.model$cluster, color = TRUE, shade = TRUE, labels = 5, lines = 0, main = "K Means Cluster Plot")
kmeans.model$size  # clusters slightly imbalanced but enough could be explained by segment size
clusplot(kmeans.baked, kmeans.model$cluster, color = TRUE, shade = TRUE, labels = 5, lines = 0, main = "K Means Cluster Plot")
clusplot(kmeans.baked, kmeans.model$cluster, color = TRUE, shade = TRUE, labels = 3, lines = 0, main = "K Means Cluster Plot")
clusplot(kmeans.baked, kmeans.model$cluster, color = TRUE, shade = TRUE, labels = 5, lines = 0, main = "K Means Cluster Plot")
kmeans.model$size  # clusters slightly imbalanced but enough could be explained by segment size
